name: Flutter CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: stable
          
      - name: Install Melos
        run: dart pub global activate melos
        
      - name: Bootstrap packages
        run: melos bootstrap
        
      - name: Verify melos setup
        run: melos list
        
      - name: Run analysis
        run: melos run analyze
        
      - name: Run tests
        run: melos run test
        
      - name: Run integration tests
        run: |
          cd packages/notes_app
          flutter test integration_test/
        if: success()

  build:
    runs-on: ubuntu-latest
    needs: test
    
    strategy:
      matrix:
        platform: [android, ios, web, windows, macos, linux]
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: stable
          
      - name: Install Melos
        run: dart pub global activate melos
        
      - name: Bootstrap packages
        run: melos bootstrap
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'
          cache: true
          
      - name: Install dependencies
        run: |
          cd packages/notes_app
          flutter pub get
          
      - name: Build for ${{ matrix.platform }}
        run: |
          cd packages/notes_app
          case ${{ matrix.platform }} in
            android)
              flutter build apk --release
              ;;
            ios)
              flutter build ios --release --no-codesign
              ;;
            web)
              flutter build web --release
              ;;
            windows)
              flutter build windows --release
              ;;
            macos)
              flutter build macos --release
              ;;
            linux)
              flutter build linux --release
              ;;
          esac
        if: matrix.platform != 'ios' || runner.os == 'macOS'

  security:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: stable
          
      - name: Install Melos
        run: dart pub global activate melos
        
      - name: Bootstrap packages
        run: melos bootstrap
        
      - name: Run security audit
        run: |
          cd packages/notes_app
          dart pub audit
          
      - name: Check for vulnerabilities
        run: |
          cd packages/alarm_data
          dart pub audit
        continue-on-error: true
          
      - name: Check for vulnerabilities
        run: |
          cd packages/alarm_domain
          dart pub audit
        continue-on-error: true

  coverage:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: stable
          
      - name: Install Melos
        run: dart pub global activate melos
        
      - name: Bootstrap packages
        run: melos bootstrap
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'
          cache: true
          
      - name: Install dependencies
        run: |
          cd packages/notes_app
          flutter pub get
          
      - name: Run tests with coverage
        run: |
          cd packages/notes_app
          flutter test --coverage
          
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: packages/notes_app/coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  release:
    runs-on: ubuntu-latest
    needs: [test, build, security]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: stable
          
      - name: Install Melos
        run: dart pub global activate melos
        
      - name: Bootstrap packages
        run: melos bootstrap
        
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          body: |
            ## Changes in this Release
            - Automated release from CI/CD pipeline
            - All tests passed
            - Security audit completed
            - Build successful for all platforms
          draft: false
          prerelease: false
